
#=======MAKEDEFS==============================================================#
# This header contains information about target architecture and machine,
# directory tree and tool-chain flags. It also holds information needed to
# generate the final OS image.
#
# Macros and global variables should be put here.
#=============================================================================#


#_______SYSTEM INFORMATION____________________________________________________#

# target architecture
TARGET 	 := ia32
MACHNAME := pc

#_______DIRECTORIES___________________________________________________________#

# project level directories
TOP   := $(abspath $(dir $(filter %makedefs, $(MAKEFILE_LIST))))
APP   := $(TOP)/app
BIN   := $(TOP)/bin
DOCS  := $(TOP)/docs
IMG   := $(TOP)/img
INC   := $(TOP)/include
SRC   := $(TOP)/src
TOOLS := $(TOP)/tools

# source code directories
ARCH  := $(SRC)/arch
BOOT  := $(SRC)/boot
MACH  := $(SRC)/machine
QLIB  := $(SRC)/qlib
TEST  := $(SRC)/test

# rename this
TRGT_ARCH := $(ARCH)/$(TARGET)
TRGT_MACH := $(MACH)/$(MACHNAME)

# bootloader image directory
GRUB  := $(IMG)/boot

#_______TOOL-CHAIN____________________________________________________________#

AS    := $(TOOLS)/cross/bin/$(TARGET)-as
CC    := $(TOOLS)/cross/bin/$(TARGET)-gcc
CXX   := $(TOOLS)/cross/bin/$(TARGET)-g++
LD    := $(TOOLS)/cross/bin/$(TARGET)-ld
STRIP := $(TOOLS)/cross/bin/$(TARGET)-strip

#_______FLAGS_________________________________________________________________#

ASFLAGS :=

CFLAGS := -I $(INC)

CXXFLAGS := -I $(INC)
CXXFLAGS += -ffreestanding -fno-exceptions
CXXFLAGS += -fno-rtti -nostdinc -fno-asynchronous-unwind-tables
CXXFLAGS += --no-use-cxa-atexit -std=c++17

LDFLAGS  := -static -nostdlib \
	-L $(patsubst %/libgcc.a,%/,$(shell $(CXX) -print-libgcc-file-name)) \
	-T $(TRGT_ARCH)/link.ld

MAKEFLAGS  += --no-print-directory

#________APP IMAGE____________________________________________________________#

IMAGE := bootable_app.iso

#________BUILD________________________________________________________________#

CXX_SRC_DIRS_REL := arch arch/ia32 machine/pc machine qlib

# the path of included files changes based on the chosen target (release/debug)
ifeq (, $(filter debug, $(MAKECMDGOALS)))
	BUILD := $(TOP)/build/release
	CXXFLAGS += -O2
	BINARY := $(GRUB)/runnable_app.release
else
	BUILD := $(TOP)/build/debug
	CXXFLAGS += -g
	BINARY := $(GRUB)/runnable_app.debug
endif

#________ERROR CHECKING_______________________________________________________#

# GNUMake is REALLY unsafe, so here's some help

OTHER_RULES := format install-cross uninstall-cross install-directories clean \
	veryclean

ifneq (, $(filter release, $(MAKECMDGOALS)))
ifneq (, $(filter debug, $(MAKECMDGOALS)))
$(error relase and debug are orthogonal, choose only one of them!)
endif
endif
