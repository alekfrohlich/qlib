# target architecture
TARGET 	 := ia32
MACHNAME := pc

# assembler, C/C++ compiler, linker
AS  := $(TARGET)-as
CC  := $(TARGET)-gcc
CXX := $(TARGET)-g++
LD  := $(TARGET)-ld

# top directories
TOP   := $(abspath $(dir $(filter %makeinc, $(MAKEFILE_LIST))))
APP   := $(TOP)/app
BIN   := $(TOP)/bin
DOCS  := $(TOP)/docs
IMG   := $(TOP)/img
INC   := $(TOP)/include
SRC   := $(TOP)/src
TOOLS := $(TOP)/tools

# source code directories
ARCH  := $(SRC)/arch
BOOT  := $(SRC)/boot
MACH  := $(SRC)/machine
STD   := $(SRC)/std
TEST  := $(SRC)/test

# target-specific directories
TRGT_ARCH := $(ARCH)/$(TARGET)
TRGT_MACH := $(MACH)/$(MACHNAME)

# bootloader image directory
GRUB  := $(IMG)/boot

# C compiler flags
CFLAGS := -I $(INC)

# C-preprocessor flags (used to generate .d files)
CPPFLAGS := -MD -MP

# C++ compiler flags
CXXFLAGS := -I $(INC)
CXXFLAGS += -ffreestanding -fno-exceptions
CXXFLAGS += -fno-rtti -nostdinc -fno-asynchronous-unwind-tables
CXXFLAGS += --no-use-cxa-atexit -std=c++0x
CXXFLAGS   += $(_ALL_CXXFLAGS) $(_DEBUG_CXXFLAGS)

# linker flags
LDFLAGS  := -static -nostdlib \
			-L $(patsubst %/libgcc.a,%/,$(shell $(CXX) -print-libgcc-file-name)) \
			-T $(TRGT_ARCH)/link.ld

# make flags
MAKEFLAGS  += --no-print-directory

# debug fatbin extension
_DEBUG_EXT :=

# fat binary, grub bootable image
FATBIN = $(addsuffix $(_DEBUG_EXT),$(GRUB)/brae.bin)
ISOFILE := brae.iso
